% Radiation components

% Import SW traces twice, first for testing, second for final overwriting with final values

% Edited by Rosie (20 March 2025)
%	- Added clamped_minMax for PPFD_IN_1_1_1 and PPFD_OUT_1_1_1 with lower bound of zero, to be consistent with SW.
% Edited by Rosie Howard (9 December 2024)
%	- Removed duplicate SW_IN_1_1_1 and SW_OUT_1_1_1 traces. 
% 	- Switched the order of SW_IN and SW_OUT because Evaluate 
%	  statement uses SW_OUT in SW_IN filter, so SW_OUT needs to be defined first.


[Trace]
	variableName = 'global_potential_radiation'
	title = 'Calculate potential radiation'
	inputFileName = {'clean_tv'}   
	inputFileName_dates = []
	measurementType = 'Met'
	units = ''
	instrument = ''
	instrumentType = ''
	instrumentSN = ''               
	Evaluate     = 'lat = configYAML.Metadata.lat;
			long = configYAML.Metadata.long;
			longW = -long;
			TimeZoneHour = configYAML.Metadata.TimeZoneHour;
			GMT = clean_tv_INCLUDE-(TimeZoneHour/24);
			global_potential_radiation = potential_radiation(GMT,lat,longW);'
	loggedCalibration = []
	currentCalibration = []
	comments = 'Above assumes TimeZoneHour in YAML file is negative west of prime meridian. We need to make sure this is standardized. The function potential_radiation() assumes longitude west of prime is positive.'
	minMax = [0,1361]
	zeroPt = [-9999]
	dependent = ''
[End]

[Trace]
	variableName = 'SW_OUT_1_1_1'  
	title = 'reflected shortwave radiation by pyranometer' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = 'W/m^2' 
	instrument = ''
	instrumentSN = ''
	minMax = [-20,500]
    clamped_minMax = [0,500]
	zeroPt = [-9999]
 	comments = 'Is filling with zero a suitable approach? In particular, what if someone changes dayNight threshold?'
  	Evaluate = 'dayNight = 10; %Wm2
  			  	flag = SW_OUT_1_1_1>global_potential_radiation & (global_potential_radiation > dayNight);
              	SW_OUT_1_1_1(flag)=NaN;
				flag = SW_OUT_1_1_1>global_potential_radiation & (global_potential_radiation < dayNight);
				SW_OUT_1_1_1(flag) = 0;'
[End]

[Trace]
	variableName = 'SW_IN_1_1_1'  
	title = 'incoming shortwave radiation by pyranometer' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = 'W/m^2' 
	instrument = ''	
	instrumentSN = ''
	minMax = [-20,1361]
    clamped_minMax = [0,1361]
	zeroPt = [-9999]
 	comments = ''
 		% NOTE: Just an arbitrary stand-in for a discussion that needs to be had
		% Replace SW_IN with global_potential_radiation, may not be best?  Perhaps better to kill it?
		% HOWEVER, we may not want these NaNs to propagate with a dependency tag
		% the flagging above is indicative of conditions that would effect PPFD and LW_IN as well
		% The flagging below could be due to sensor-specific errors that may not propagate
		%flag = SW_IN_1_1_1>global_potential_radiation;
		%SW_IN_1_1_1(flag)=global_potential_radiation(flag);
		% I think the global potential radiation test should be used (elsewhere perhaps) to flag data for user inspection
   	Evaluate = 'minDiff = 10; %Wm2
                flag = (SW_OUT_1_1_1-SW_IN_1_1_1)>minDiff & (global_potential_radiation > dayNight);
				SW_IN_1_1_1(flag)=NaN;'
	dependent = 'tag_IN_Rad'
[End]

[Trace]
	variableName = 'LW_IN_1_1_1'  
	title = 'incoming longwave radiation by pyrgeometer' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = 'W/m^2' 
	instrument = ''
	instrumentSN = ''
	minMax = [50,850]
	zeroPt = [-9999]  
	% dependent = 'tag_IN_Rad'
[End]

[Trace]
	variableName = 'LW_OUT_1_1_1'  
	title = 'outgoing longwave radiation by pyrgeometer' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = 'W/m^2' 
	instrument = ''
	instrumentSN = ''
	minMax = [50,850]
	zeroPt = [-9999]  
[End]

[Trace]
	variableName = 'NETRAD_1_1_1'  
	title = 'net radiation by net or four-component radiometer' 
	inputFileName = {} 
	inputFileName_dates = [datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = 'W/m2'
	instrument = ''
	instrumentSN = ''
	minMax = [-200,1000]
	zeroPt = [-9999]
	%Evaluate = 'NETRAD_1_1_1 = SW_IN_1_1_1 + LW_IN_1_1_1 - (SW_OUT_1_1_1 + LW_OUT_1_1_1);'
[End]

[Trace]
	variableName = 'ALB_1_1_1'  
	title = 'albedo' 
	inputFileName = {} 
	inputFileName_dates = [datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = '%' 
	instrument = ''
	instrumentSN = '' 
	minMax = [-10,110]
	zeroPt = [-9999]  
  	%Evaluate = 'ALB_1_1_1=SW_OUT_1_1_1./SW_IN_1_1_1;'
[End]

[Trace]
	variableName = 'PPFD_IN_1_1_1'  
	title = 'incoming PAR' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = '\mu mol/m^2/s' 
	instrument = ''
	instrumentSN = ''
	minMax = [-40,3000]
	clamped_minMax = [0,3000] 
	zeroPt = [-9999]
	% dependent = 'tag_IN_Rad' % An issue with the PPFD sensor does not necessarily imply there is a problem with upward facing pyranometer/pyrgeometer.
[End]

[Trace]
	variableName = 'PPFD_OUT_1_1_1'  
	title = 'reflected PAR' 
	inputFileName = {} 
	inputFileName_dates =[datenum(1901,1,1) datenum(2999,1,1)] 
	measurementType = 'Met' 
	units = '\mu mol/m^2/s'
	instrument = ''
	instrumentSN = ''
	minMax = [-40,1500]
	clamped_minMax = [0,1500] 
	zeroPt = [-9999]  
[End]
